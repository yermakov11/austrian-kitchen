generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  accounts  Account[]
  sessions  Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Ingredient {
  id           String   @id @default(uuid())
  name         String
  category     Category
  unit         Unit
  pricePerUnit Float?
  description  String?
  recipes RecipeIngredient[]
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("ingredient")
}

enum Category {
  VEGETABLE
  FRUIT
  MEAT
  DAIRY
  GRAIN
  OTHER
}

enum Unit {
  GRAM
  KILOGRAM
  LITER
  MILLILITER
  PIECE
  OTHER
}

model Recipe {
  id String @id @default(uuid())
  name String
  description String
  image_url String? @map("image_url")
  ingredients RecipeIngredient[]

  @@map("recipes")
}

model RecipeIngredient {
  id String @id @default(uuid())
  recipe Recipe @relation(fields: [recipeId], references: [id])
  recipeId String 
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String
  quantity Float
  
  @@map("recipe_ingredients")
}



